[linters-settings]

  [linters-settings.depguard]
  list-type = "blacklist"
  packages = [
    # "github.com/sirupsen/logrus"
  ]

	[[linters-settings.depguard.packages-with-error-message]]
	#"github.com/sirupsen/logrus" = "logging is allowed only by logutils.Log"

  [linters-settings.dupl]
  threshold = 100.0

  #[linters-settings.exhaustive]
  #default-signifies-exhaustive = false

  [linters-settings.funlen]
  lines = 100.0
  statements = 50.0

  [linters-settings.gci]
  local-prefixes = "github.com/golangci/golangci-lint"

  [linters-settings.goconst]
  min-len = 2.0
  min-occurrences = 2.0

  [linters-settings.gocritic]
  enabled-tags = [
    "diagnostic",
    "experimental",
    "opinionated",
    "performance",
    "style"
  ]
  disabled-checks = [
    "dupImport",
    "ifElseChain",
    "octalLiteral",
    "whyNoLint",
    "wrapperFunc"
  ]

  [linters-settings.gocyclo]
  min-complexity = 15.0

  [linters-settings.goimports]
  local-prefixes = "github.com/golangci/golangci-lint"

  [linters-settings.golint]
  min-confidence = 0.0

  [linters-settings.gomnd]

    [linters-settings.gomnd.settings]

      [linters-settings.gomnd.settings.mnd]
      checks = "argument,case,condition,return"

  [linters-settings.govet]
  check-shadowing = true

    [linters-settings.govet.settings]

      [linters-settings.govet.settings.printf]
      funcs = [
        "(github.com/golangci/golangci-lint/pkg/logutils.Log).Infof",
        "(github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf",
        "(github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf",
        "(github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf"
      ]

  [linters-settings.lll]
  line-length = 140.0

  [linters-settings.maligned]
  suggest-new = true

  [linters-settings.misspell]
  locale = "US"

  [linters-settings.nolintlint]
  allow-leading-space = true
  allow-unused = false
  require-explanation = false
  require-specific = false

[linters]
disable-all = true
enable = [
  "bodyclose",
  "deadcode",
  "depguard",
  "dogsled",
  "dupl",
  "errcheck",
  #"exhaustive",
  "funlen",
  "gochecknoinits",
  "goconst",
  "gocritic",
  "gocyclo",
  "gofmt",
  "goimports",
  "golint",
  "gomnd",
  "goprintffuncname",
  "gosec",
  "gosimple",
  "govet",
  "ineffassign",
  "interfacer",
  "lll",
  "misspell",
  "nakedret",
  #"noctx",
  #"nolintlint",
  "rowserrcheck",
  "scopelint",
  "staticcheck",
  "structcheck",
  "stylecheck",
  "typecheck",
  "unconvert",
  "unparam",
  "unused",
  "varcheck",
  "whitespace"
]

[issues]

  [[issues.exclude-rules]]
  path = "_test\\.go"
  linters = [
    "gomnd"
  ]

  [[issues.exclude-rules]]
  linters = [
    "gocritic"
  ]
  text = "unnecessaryDefer:"

[run]
skip-dirs = [
  #"test/testdata_etc",
  #"internal/cache",
  #"internal/renameio",
  #"internal/robustio"
]

timeout = "1h"

[service]
golangci-lint-version = "1.23.x"
prepare = [
  "echo \"here I can run custom commands, but no preparation needed for this repo\""
]
